version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: caia_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - caia_network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    container_name: caia_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - caia_network

  # Neo4j Graph Database (optional)
  neo4j:
    image: neo4j:5.15-community
    container_name: caia_neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/caia_knowledge_2024
      - NEO4J_PLUGINS=["apoc","graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_memory_heap_initial_size=512m
      - NEO4J_dbms_memory_heap_max_size=1G
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "caia_knowledge_2024", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - caia_network

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: caia_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - caia_network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:10.2.2
    container_name: caia_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=caia_admin_2024
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - caia_network

  # ChromaDB (alternative vector DB)
  chromadb:
    image: chromadb/chroma:0.4.22
    container_name: caia_chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - PERSIST_DIRECTORY=/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - caia_network

  # Minio for object storage (optional)
  minio:
    image: quay.io/minio/minio:RELEASE.2024-01-01T16-36-33Z
    container_name: caia_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=caia_admin
      - MINIO_ROOT_PASSWORD=caia_minio_2024
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - caia_network

volumes:
  qdrant_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/qdrant
  
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  
  neo4j_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/data
  
  neo4j_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/logs
  
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus
  
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana
  
  chroma_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/chroma
  
  minio_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/minio

networks:
  caia_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16